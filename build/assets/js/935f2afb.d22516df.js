"use strict";(self.webpackChunkbuildflow_docs=self.webpackChunkbuildflow_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mainSidebar":[{"type":"link","label":"BuildFlow","href":"/docs/","docId":"intro"},{"type":"category","label":"What is BuildFlow?","items":[{"type":"link","label":"Overview","href":"/docs/what_is_buildflow/overview","docId":"what_is_buildflow/overview"},{"type":"link","label":"Concepts","href":"/docs/what_is_buildflow/concepts","docId":"what_is_buildflow/concepts"}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr>Get Started","className":"sidebar-title"},{"type":"link","label":"Install","href":"/docs/install","docId":"install"},{"type":"link","label":"Quickstart","href":"/docs/quickstart","docId":"quickstart"},{"type":"html","value":"<hr>API References","className":"sidebar-title"},{"type":"link","label":"Processor API","href":"/docs/apis/processor","docId":"apis/processor"},{"type":"link","label":"Node API","href":"/docs/apis/node","docId":"apis/node"},{"type":"category","label":"IO Providers","items":[{"type":"link","label":"Provider API","href":"/docs/apis/providers/base","docId":"apis/providers/base"},{"type":"category","label":"gcp","items":[{"type":"link","label":"Google Pub/Sub Providers","href":"/docs/apis/providers/gcp/gcp_pubsub","docId":"apis/providers/gcp/gcp_pubsub"},{"type":"link","label":"Google BigQuery Providers","href":"/docs/apis/providers/gcp/gcp_bigquery","docId":"apis/providers/gcp/gcp_bigquery"},{"type":"link","label":"Google Cloud Storage Providers","href":"/docs/apis/providers/gcp/gcp_storage","docId":"apis/providers/gcp/gcp_storage"}],"collapsed":true,"collapsible":true},{"type":"category","label":"local","items":[{"type":"link","label":"FileProvider","href":"/docs/apis/providers/local/file_provider","docId":"apis/providers/local/file_provider"},{"type":"link","label":"PulsingProvider","href":"/docs/apis/providers/local/pulse_provider","docId":"apis/providers/local/pulse_provider"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"html","value":"<hr>Walkthroughs","className":"sidebar-title"},{"type":"link","label":"GCP Pub/Sub Streaming","href":"/docs/walkthroughs/pubsub_streaming","docId":"walkthroughs/pubsub_streaming"},{"type":"link","label":"Local GCP Pub/Sub to Parquet","href":"/docs/walkthroughs/local_pubsub_streaming","docId":"walkthroughs/local_pubsub_streaming"},{"type":"link","label":"GCS CSV to GCP BigQuery Streaming","href":"/docs/walkthroughs/csv_bigquery_streaming","docId":"walkthroughs/csv_bigquery_streaming"},{"type":"link","label":"AWS SQS Streaming","href":"/docs/walkthroughs/aws_sqs_streaming","docId":"walkthroughs/aws_sqs_streaming"},{"type":"html","value":"<hr>Features","className":"sidebar-title"},{"type":"link","label":"Dynamic Autoscaling","href":"/docs/features/autoscaling","docId":"features/autoscaling"},{"type":"link","label":"Parallelism & Concurrency","href":"/docs/features/parallelism","docId":"features/parallelism"},{"type":"link","label":"Resource Creation","href":"/docs/features/resource-creation","docId":"features/resource-creation"},{"type":"link","label":"Schema Validation","href":"/docs/features/schema-validation","docId":"features/schema-validation"},{"type":"html","value":"<hr>Architecture","className":"sidebar-title"},{"type":"link","label":"Runtime","href":"/docs/architecture/runtime","docId":"architecture/runtime"},{"type":"link","label":"Infrastructure","href":"/docs/architecture/infrastructure","docId":"architecture/infrastructure"}]},"docs":{"apis/deployment-grid":{"id":"apis/deployment-grid","title":"Deployment Grid","description":"The DeploymentGrid object is responsible for deploying Nodes."},"apis/node":{"id":"apis/node","title":"Node API","description":"The Node object is the container for your application.","sidebar":"mainSidebar"},"apis/processor":{"id":"apis/processor","title":"Processor API","description":"The Processor API is the primary abstraction provided by BuildFlow. It contains all of the user\'s processing logic between the IO Providers. Processors come in two different flavors: streaming and batch. The main difference between the two is that in batch mode you operate on a finite (bounded) set of data, and in streaming mode you operate on an infinite (unbounded) stream of data.","sidebar":"mainSidebar"},"apis/providers/base":{"id":"apis/providers/base","title":"Provider API","description":"Providers implement the logic for setting up and interacting with other systems and resources (ResourceTypes). There are multiple types of Providers and each type is responsible for a single task (i.e. a PullProvider only needs to provide a pull method).","sidebar":"mainSidebar"},"apis/providers/gcp/gcp_bigquery":{"id":"apis/providers/gcp/gcp_bigquery","title":"Google BigQuery Providers","description":"StreamingBigQueryProvider","sidebar":"mainSidebar"},"apis/providers/gcp/gcp_pubsub":{"id":"apis/providers/gcp/gcp_pubsub","title":"Google Pub/Sub Providers","description":"GCPPubSubTopicProvider","sidebar":"mainSidebar"},"apis/providers/gcp/gcp_storage":{"id":"apis/providers/gcp/gcp_storage","title":"Google Cloud Storage Providers","description":"GCSFileStreamProvider","sidebar":"mainSidebar"},"apis/providers/local/file_provider":{"id":"apis/providers/local/file_provider","title":"FileProvider","description":"","sidebar":"mainSidebar"},"apis/providers/local/pulse_provider":{"id":"apis/providers/local/pulse_provider","title":"PulsingProvider","description":"","sidebar":"mainSidebar"},"architecture/infrastructure":{"id":"architecture/infrastructure","title":"Infrastructure","description":"","sidebar":"mainSidebar"},"architecture/overview":{"id":"architecture/overview","title":"Overview","description":""},"architecture/runtime":{"id":"architecture/runtime","title":"Runtime","description":"","sidebar":"mainSidebar"},"features/autoscaling":{"id":"features/autoscaling","title":"Dynamic Autoscaling","description":"TODO: Update this","sidebar":"mainSidebar"},"features/parallelism":{"id":"features/parallelism","title":"Parallelism & Concurrency","description":"TODO: Fill this out","sidebar":"mainSidebar"},"features/resource-creation":{"id":"features/resource-creation","title":"Resource Creation","description":"TODO Infrastructure from Code","sidebar":"mainSidebar"},"features/schema-validation":{"id":"features/schema-validation","title":"Schema Validation","description":"TODO: Update this","sidebar":"mainSidebar"},"install":{"id":"install","title":"Install","description":"Quick Setup","sidebar":"mainSidebar"},"intro":{"id":"intro","title":"BuildFlow","description":"Build your entire system in minutes using Python","sidebar":"mainSidebar"},"processors/batch":{"id":"processors/batch","title":"Batch","description":"A Batch Processor is any processor the consumes a bounded set of data, such as a BigQuery table or SQL query."},"processors/streaming":{"id":"processors/streaming","title":"Streaming","description":"A Streaming Processor is any processor that consumes an un-bounded stream of data, such as a Google Cloud Pub/Sub feed."},"quickstart":{"id":"quickstart","title":"Quickstart","description":"Install","sidebar":"mainSidebar"},"walkthroughs/aws_sqs_streaming":{"id":"walkthroughs/aws_sqs_streaming","title":"AWS SQS Streaming","description":"AWS SQS support is currenty in prototype mode, and only SQS as a source is supported.","sidebar":"mainSidebar"},"walkthroughs/csv_bigquery_streaming":{"id":"walkthroughs/csv_bigquery_streaming","title":"GCS CSV to GCP BigQuery Streaming","description":"In this walkthrough we will run a BuildFlow application that listens for CSV file uploads to a Google Cloud Storage bucket. When an upload occurs the BuildFlow application will read the corresponding file, perform any necessary transformations on it, and upload the results to BigQuery. You can find all the code for this walk through here.","sidebar":"mainSidebar"},"walkthroughs/local_pubsub_streaming":{"id":"walkthroughs/local_pubsub_streaming","title":"Local GCP Pub/Sub to Parquet","description":"In this walkthrough we will run a BuildFlow application that reads from a local Pub/Sub topic and writes the data to a local parquet file. You can find all the code for this walk through here.","sidebar":"mainSidebar"},"walkthroughs/pubsub_streaming":{"id":"walkthroughs/pubsub_streaming","title":"GCP Pub/Sub Streaming","description":"In this walkthrough we will run a BuildFlow application that reads from a Pub/Sub topic containing publically available taxi data and write the data to BigQuery. You can find all the code for this walk through here.","sidebar":"mainSidebar"},"walkthroughs/setup_buildflow":{"id":"walkthroughs/setup_buildflow","title":"Setup LaunchFlow","description":"Install LaunchFlow"},"what_is_buildflow/concepts":{"id":"what_is_buildflow/concepts","title":"Concepts","description":"Nodes","sidebar":"mainSidebar"},"what_is_buildflow/overview":{"id":"what_is_buildflow/overview","title":"Overview","description":"BuildFlow, is an open source framework for building large scale systems using Python. All you need to do is describe where your input is coming from and where your output should be written, and BuildFlow handles the rest. No configuration outside of the code is required.","sidebar":"mainSidebar"}}}')}}]);