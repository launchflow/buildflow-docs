"use strict";(self.webpackChunkbuildflow_docs=self.webpackChunkbuildflow_docs||[]).push([[1134],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(g,s(s({ref:t},u),{},{components:r})):n.createElement(g,s({ref:t},u))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3564:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},s="Autoscaling Options",i={unversionedId:"user-guides/processors/auto-scaling-options",id:"user-guides/processors/auto-scaling-options",title:"Autoscaling Options",description:"These options control how the autoscaler should scale individual processors can be passed when creating a processor of any type. All options are optional and have reasonable defaults. Your options are:",source:"@site/docs/user-guides/processors/auto-scaling-options.md",sourceDirName:"user-guides/processors",slug:"/user-guides/processors/auto-scaling-options",permalink:"/docs/user-guides/processors/auto-scaling-options",draft:!1,editUrl:"https://github.com/launchflow/buildflow-docs/tree/main/docs/user-guides/processors/auto-scaling-options.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Custom Types",permalink:"/docs/user-guides/processors/custom-types"},next:{title:"Pipelines",permalink:"/docs/user-guides/pipelines/overview"}},l={},c=[{value:"Advanced Autoscaling Options",id:"advanced-autoscaling-options",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"autoscaling-options"},"Autoscaling Options"),(0,o.kt)("p",null,"These options control how the autoscaler should scale individual processors can be passed when creating a processor of any type. All options are optional and have reasonable defaults. Your options are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"enable_autoscaler")," - Whether or not to enable autoscaling for the node. Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"True")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"min_replicas")," - The minimum number of replicas each processor should have. Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"max_replicas")," - The maximum number of replicas each processor should have. Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"1000"))),(0,o.kt)("h2",{id:"advanced-autoscaling-options"},"Advanced Autoscaling Options"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"pipeline_backlog_burn_threshold")," - The threshold for how long it will take to burn down a backlog before scaling up. Increasing this number will cause your pipeline to scale up more aggresively. Defaults to 60."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"pipeline_cpu_percent_target")," - The target cpu percentage for scalingdown. Increasing this number will cause your pipeline to scale down more aggresively. Defaults to 25.")))}d.isMDXComponent=!0}}]);