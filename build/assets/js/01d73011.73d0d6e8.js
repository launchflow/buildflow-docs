"use strict";(self.webpackChunkbuildflow_docs=self.webpackChunkbuildflow_docs||[]).push([[976],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),p=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(s.Provider,{value:r},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||l;return t?n.createElement(f,a(a({ref:r},u),{},{components:t})):n.createElement(f,a({ref:r},u))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=m;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var p=2;p<l;p++)a[p]=t[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},719:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=t(7462),o=(t(7294),t(3905));const l={sidebar_position:2},a="Concepts",i={unversionedId:"what_is_buildflow/concepts",id:"what_is_buildflow/concepts",title:"Concepts",description:"Nodes",source:"@site/docs/what_is_buildflow/concepts.md",sourceDirName:"what_is_buildflow",slug:"/what_is_buildflow/concepts",permalink:"/docs/what_is_buildflow/concepts",draft:!1,editUrl:"https://github.com/launchflow/buildflow-docs/tree/main/docs/what_is_buildflow/concepts.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"mainSidebar",previous:{title:"Overview",permalink:"/docs/what_is_buildflow/overview"},next:{title:"Install",permalink:"/docs/install"}},s={},p=[{value:"Nodes",id:"nodes",level:2},{value:"Processors",id:"processors",level:2},{value:"ResourceType",id:"resourcetype",level:2},{value:"Providers",id:"providers",level:2},{value:"PullProvider",id:"pullprovider",level:3},{value:"PushProvider",id:"pushprovider",level:3},{value:"PulumiProvider",id:"pulumiprovider",level:3}],u={toc:p},d="wrapper";function c(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"concepts"},"Concepts"),(0,o.kt)("h2",{id:"nodes"},"Nodes"),(0,o.kt)("p",null,"The Node class is the entrypoint into the BuildFlow Framework. Nodes acts as a container type for user-defined Processors and are responsible for orchestrating the Processors across the Runtime and Infrastructure submodules."),(0,o.kt)("p",null,"TLDR; Nodes act as a container type for a user's application:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from buildflow import Node\n\napp = Node()\n\n...\n")),(0,o.kt)("h2",{id:"processors"},"Processors"),(0,o.kt)("p",null,"At a high-level, Processors are a user-defined function sandwiched between an input provider (Source) and output provider (Sink). They act as a declaritive API for describing your system, and offload a majority of the work to the Node class and Providers."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# Creates a Processor and adds it to the app (Node class)\n@app.processor(source=..., sink=...)\ndef my_processor(payload):\n    # TODO(developer): Add processing logic\n    return payload\n")),(0,o.kt)("h2",{id:"resourcetype"},"ResourceType"),(0,o.kt)("p",null,"ResourceTypes are the input (Sources) and output (Sinks) objects passed to a Processor. They act as a container type for any configuration values, such as a ",(0,o.kt)("inlineCode",{parentName:"p"},"project_id")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"table_id"),". ResourceTypes ",(0,o.kt)("strong",{parentName:"p"},"do not")," implement any logic, but rather expose a ",(0,o.kt)("inlineCode",{parentName:"p"},"provider()")," method fetching the Provider class that contains the logic."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class BigQueryTable(ResourceType):\n    # format: project.dataset.table\n    table_id: str\n\n    def provider(self):\n        return BigQueryProvider(table_id=self.table_id)\n")),(0,o.kt)("h2",{id:"providers"},"Providers"),(0,o.kt)("p",null,"Providers implement the logic for setting up and interacting with other systems and resources (ResourceTypes). There are multiple types of Providers and each type is responsible for a single task (i.e. a PullProvider only needs to provide a ",(0,o.kt)("inlineCode",{parentName:"p"},"pull")," method). "),(0,o.kt)("h3",{id:"pullprovider"},"PullProvider"),(0,o.kt)("p",null,"PullProviders are used to ",(0,o.kt)("inlineCode",{parentName:"p"},"pull")," data from a Source and optionally ",(0,o.kt)("inlineCode",{parentName:"p"},"ack")," completion of work, typically in a streaming runtime."),(0,o.kt)("p",null,"Required methods:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"pull")),(0,o.kt)("p",null,"Optional methods (unlocks more Runtime features):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ack"),(0,o.kt)("li",{parentName:"ul"},"backlog"),(0,o.kt)("li",{parentName:"ul"},"pull_converter")),(0,o.kt)("p",null,"Example PullProvider:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from buildflow.io.providers import PullProvider, PullResponse, AckInfo\n\nclass MyProvider(PullProvider):\n\n    async def pull(self) -> PullResponse:\n        ...\n\n    async def ack(self, to_ack: AckInfo):\n        ...\n")),(0,o.kt)("h3",{id:"pushprovider"},"PushProvider"),(0,o.kt)("p",null,"PushProviders are used to ",(0,o.kt)("inlineCode",{parentName:"p"},"push")," data to a Sink."),(0,o.kt)("p",null,"Required methods:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"push")),(0,o.kt)("p",null,"Optional methods (unlocks more Runtime features):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"push_converter")),(0,o.kt)("p",null,"Example PushProvider:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from buildflow.io.providers import PushProvider, PushResponse, BatchType\n\nclass MyProvider(PushProvider):\n\n    async def push(self, batch: BatchType) -> PushResponse:\n        ...\n")),(0,o.kt)("h3",{id:"pulumiprovider"},"PulumiProvider"),(0,o.kt)("p",null,"PulumiProviders are used to create / manage infrastructure using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pulumi/pulumi"},"Pulumi"),"."),(0,o.kt)("p",null,"Required methods:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"pulumi")),(0,o.kt)("p",null,"Example PushProvider:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from typing import Optional, Type\nfrom buildflow.io.providers import PulumiProvider, PulumiResources\n\nclass MyProvider(PulumiProvider):\n\n    def pulumi(self, type_: Optional[Type]) -> PulumiResources:\n        ...\n")))}c.isMDXComponent=!0}}]);