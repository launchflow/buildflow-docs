"use strict";(self.webpackChunkbuildflow_docs=self.webpackChunkbuildflow_docs||[]).push([[813],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||s;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3918:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const s={},a="AQS SWS",i={unversionedId:"io-providers/aws_sqs",id:"io-providers/aws_sqs",title:"AQS SWS",description:"AWS SQS support is currenty in prototype mode, and only SQS as a source is supported.",source:"@site/docs/io-providers/aws_sqs.md",sourceDirName:"io-providers",slug:"/io-providers/aws_sqs",permalink:"/docs/io-providers/aws_sqs",draft:!1,editUrl:"https://github.com/launchflow/buildflow-docs/tree/main/docs/io-providers/aws_sqs.md",tags:[],version:"current",frontMatter:{}},u={},c=[{value:"Source Output Type",id:"source-output-type",level:2},{value:"Source Class Definition",id:"source-class-definition",level:2}],l={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"aqs-sws"},"AQS SWS"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"AWS SQS support is currenty in prototype mode, and only SQS as a source is supported.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"SQS")," refers to Amazon's SQS service. It is a ",(0,o.kt)("strong",{parentName:"p"},"streaming")," source connector."),(0,o.kt)("p",null,"Messages are sent to the Processor 1 at a time. If you need to emit mulitple outputs, you should return an iterable (list, generator, etc.)"),(0,o.kt)("p",null,"To use the source you must have AWS credentials configured on your machine. See: ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html"},"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html")),(0,o.kt)("h2",{id:"source-output-type"},"Source Output Type"),(0,o.kt)("p",null,"The SQS source will return one message at a time with the same dictionary format as the ",(0,o.kt)("a",{parentName:"p",href:"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sqs/client/receive_message.html"},"AWS python SDK")," returns."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-code"},"{\n    'MessageId': 'string',\n    'ReceiptHandle': 'string',\n    'MD5OfBody': 'string',\n    'Body': 'string',\n    'Attributes': {\n        'string': 'string'\n    },\n    'MD5OfMessageAttributes': 'string',\n    'MessageAttributes': {\n        'string': {\n            'StringValue': 'string',\n            'BinaryValue': b'bytes',\n            'StringListValues': [\n                'string',\n            ],\n            'BinaryListValues': [\n                b'bytes',\n            ],\n            'DataType': 'string'\n        }\n    }\n},\n")),(0,o.kt)("h2",{id:"source-class-definition"},"Source Class Definition"),(0,o.kt)("p",null,"If the queue name does not exist we will attempt to create it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SQSSource(io.StreamingSource):\n    queue_name: str\n    queue_owner_aws_account_id: str = ''\n")))}d.isMDXComponent=!0}}]);