"use strict";(self.webpackChunkbuildflow_docs=self.webpackChunkbuildflow_docs||[]).push([[4189],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=i.createContext({}),l=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=l(r),m=n,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return r?i.createElement(f,a(a({ref:t},u),{},{components:r})):i.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[c]="string"==typeof e?e:n,a[1]=p;for(var l=2;l<o;l++)a[l]=r[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1803:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var i=r(7462),n=(r(7294),r(3905));const o={},a="Primitives",p={unversionedId:"user-guides/primitives/overview",id:"user-guides/primitives/overview",title:"Primitives",description:"A full list of provided primitives can be found here",source:"@site/docs/user-guides/primitives/overview.md",sourceDirName:"user-guides/primitives",slug:"/user-guides/primitives/overview",permalink:"/docs/user-guides/primitives/overview",draft:!1,editUrl:"https://github.com/launchflow/buildflow-docs/tree/main/docs/user-guides/primitives/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Endpoint Options",permalink:"/docs/user-guides/endpoints/endpoint-options"},next:{title:"Portable",permalink:"/docs/user-guides/primitives/portable"}},s={},l=[{value:"Primitive Resource Management",id:"primitive-resource-management",level:2},{value:"Resource Creation",id:"resource-creation",level:3},{value:"Resource Destruction",id:"resource-destruction",level:3}],u={toc:l},c="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,i.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"primitives"},"Primitives"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"A full list of provided primitives can be found ",(0,n.kt)("a",{parentName:"p",href:"../../category/primitives/"},"here"))),(0,n.kt)("p",null,"Primitives are a resource that can be read from, written to, or managed by BuildFlow. For pipeline, they are used for the ",(0,n.kt)("inlineCode",{parentName:"p"},"source")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"sink"),"."),(0,n.kt)("h2",{id:"primitive-resource-management"},"Primitive Resource Management"),(0,n.kt)("p",null,"A primimitive not only defines the input and output. With BuildFlow you are also defining resources that can be created and destroyed as part of your Flow."),(0,n.kt)("h3",{id:"resource-creation"},"Resource Creation"),(0,n.kt)("p",null,"Resource creation can be done by simply running:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"buildflow apply main:app\n")),(0,n.kt)("p",null,"This will print out a plan of everything that will be created. If you are happy with the plan you can run type: ",(0,n.kt)("inlineCode",{parentName:"p"},"yes")," to accept it."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"You may notice that often an individual primitive creates and managed multiple resources in order to accomplish reading or writing."),(0,n.kt)("p",{parentName:"admonition"},"For instance writing to Snowflake takes over 15 resources!")),(0,n.kt)("h3",{id:"resource-destruction"},"Resource Destruction"),(0,n.kt)("p",null,"Resource destruction can be done by simply running:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"buildflow destroy main:app\n")),(0,n.kt)("p",null,"Similiar to apply this will print out all resources that will be destroyed. If you are happy with the plan you can run type: ",(0,n.kt)("inlineCode",{parentName:"p"},"yes")," to accept it."))}d.isMDXComponent=!0}}]);