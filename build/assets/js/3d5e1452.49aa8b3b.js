"use strict";(self.webpackChunkbuildflow_docs=self.webpackChunkbuildflow_docs||[]).push([[574],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>v});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=o,v=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return t?n.createElement(v,i(i({ref:r},p),{},{components:t})):n.createElement(v,i({ref:r},p))}));function v(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9248:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const a={},i="Overview",s={unversionedId:"io-providers/overview",id:"io-providers/overview",title:"Overview",description:"IO Connectors provide effecient I/O between popular cloud services & storage systems.",source:"@site/docs/io-providers/overview.md",sourceDirName:"io-providers",slug:"/io-providers/overview",permalink:"/docs/io-providers/overview",draft:!1,editUrl:"https://github.com/launchflow/buildflow-docs/tree/main/docs/io-providers/overview.md",tags:[],version:"current",frontMatter:{}},c={},l=[{value:"Streaming vs Batch Connectors",id:"streaming-vs-batch-connectors",level:2},{value:"All Available Connectors",id:"all-available-connectors",level:2}],p={toc:l},u="wrapper";function d(e){let{components:r,...t}=e;return(0,o.kt)(u,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"IO Connectors")," provide effecient I/O between popular cloud services & storage systems."),(0,o.kt)("p",null,"With all IO Connectors you can either provide an already provisioned resource, or just give us a path to a resource that should be created. If the resource does not exist BuildFlow will create it for you and ensure you have the proper access."),(0,o.kt)("h2",{id:"streaming-vs-batch-connectors"},"Streaming vs Batch Connectors"),(0,o.kt)("p",null,"All connectors can work as ",(0,o.kt)("strong",{parentName:"p"},"streaming")," and ",(0,o.kt)("strong",{parentName:"p"},"batch")," output ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"sinks")),"."),(0,o.kt)("p",null,"The Processor's input ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"source"))," connector determines if the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"sink"))," connector should run in streaming or batch mode."),(0,o.kt)("p",null,"For Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@app.processor(\n    # PubSub is a streaming source\n    source=PubSubSource(...),\n    # The BigQuery Streaming API will be used in this case\n    sink=BigQuerySink(...),\n)\ndef process(payload: Any):\n    return payload\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@app.processor(\n    # BigQuery is a batch source\n    source=BigQuerySink(...),\n    # The BigQuery LoadJobs API will be used in this case\n    sink=BigQuerySource(...),\n)\ndef process(payload: Any):\n    return payload\n")),(0,o.kt)("h2",{id:"all-available-connectors"},"All Available Connectors"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/io-providers/aws_sqs"},"AWS SQS - Streaming Source")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/io-providers/gcp_pubsub"},"Google Cloud Pub/Sub - Streaming Source")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/io-providers/gcs_notifications"},"Google Cloud Storage Notifications - Streaming Source")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/io-providers/gcp_bigquery"},"Google Cloud BigQuery - Batch Source"))))}d.isMDXComponent=!0}}]);