"use strict";(self.webpackChunkbuildflow_docs=self.webpackChunkbuildflow_docs||[]).push([[402],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,d=m["".concat(c,".").concat(u)]||m[u]||f[u]||i;return n?r.createElement(d,l(l({ref:t},s),{},{components:n})):r.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8474:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={},l="File Change Stream",o={unversionedId:"reference/primitives/local/file_change_stream",id:"reference/primitives/local/file_change_stream",title:"File Change Stream",description:"LocalFileChangeStream is a source primitive that can be used to listen to to file change events for a file path. To create a LocalFileChangeStream provide the",source:"@site/docs/reference/primitives/local/file_change_stream.md",sourceDirName:"reference/primitives/local",slug:"/reference/primitives/local/file_change_stream",permalink:"/docs/reference/primitives/local/file_change_stream",draft:!1,editUrl:"https://github.com/launchflow/buildflow-docs/tree/main/docs/reference/primitives/local/file_change_stream.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"File",permalink:"/docs/reference/primitives/local/file"},next:{title:"Pulse",permalink:"/docs/reference/primitives/local/pulse"}},c={},p=[{value:"Types",id:"types",level:2}],s={toc:p},m="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"file-change-stream"},"File Change Stream"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"LocalFileChangeStream")," is a source primitive that can be used to listen to to file change events for a file path. To create a ",(0,a.kt)("inlineCode",{parentName:"p"},"LocalFileChangeStream")," provide the "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file_path")," ",(0,a.kt)("strong",{parentName:"li"},"required"),": file path to listen to changes in"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"event_types"),": List of event types to subscribe to. Defaults to: ",(0,a.kt)("inlineCode",{parentName:"li"},"[FileChangeStreamEventType.CREATED]"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from buildflow.io.local import LocalFileChangeStream\nfrom buildflow.types.local import FileChangeStreamEventType, LocalFileChangeEvent\n\n@app.pipeline(source=LocalFileChangeStream(file_path="./dir_to_listen/", event_types=[FileChangeStreamEventType.CREATED]), sink=...)\ndef process(elem: LocalFileChangeEvent):\n    ...\n')),(0,a.kt)("h2",{id:"types"},"Types"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"LocalFileChangeStream")," source always returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"LocalFileChangeEvent")," object. This object contains the following fields:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"metadata"),": any metadata that was associated with the file change event. This is a dictionary of strings."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"blob"),": The raw contents of the file. This is lazily fetched.")))}f.isMDXComponent=!0}}]);