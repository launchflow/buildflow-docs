"use strict";(self.webpackChunkbuildflow_docs=self.webpackChunkbuildflow_docs||[]).push([[3799],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),c=s(r),f=i,m=c["".concat(u,".").concat(f)]||c[f]||d[f]||o;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,l=new Array(o);l[0]=f;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[c]="string"==typeof e?e:i,l[1]=a;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},198:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>s});var n=r(7462),i=(r(7294),r(3905));const o={},l="Run",a={unversionedId:"reference/cli/run",id:"reference/cli/run",title:"Run",description:"The plan command will run the current BuildFlow Node.",source:"@site/docs/reference/cli/run.md",sourceDirName:"reference/cli",slug:"/reference/cli/run",permalink:"/docs/reference/cli/run",draft:!1,editUrl:"https://github.com/launchflow/buildflow-docs/tree/main/docs/reference/cli/run.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Strategy",permalink:"/docs/reference/api/strategy"},next:{title:"Apply",permalink:"/docs/reference/cli/apply"}},u={},s=[],p={toc:s},c="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"run"},"Run"),(0,i.kt)("p",null,"The plan command will run the current BuildFlow Node."),(0,i.kt)("p",null,"Arguments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"app"),": The BuildFlow node/app to run.")),(0,i.kt)("p",null,"Options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"start-runtime-server"),": Whether to start the server for the running application (defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"False"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"runtime-server-host"),": If ",(0,i.kt)("inlineCode",{parentName:"li"},"start-runtime-server")," is set, this is the host it will run on (defaults to 127.0.0.1)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"runtime-server-port"),": If ",(0,i.kt)("inlineCode",{parentName:"li"},"start-runtime-server")," is set, this is the port it will run on (defaults to 9653)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"run-id"),": The run id to use for this run this will be included in any metrics. (defaults to None)")),(0,i.kt)("p",null,"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"buildflow run --help")," to see available options:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ buildflow run --help\nUsage: buildflow run [OPTIONS] APP\n\n  Run a buildflow flow.\n\nArguments:\n  APP  The flow app to run  [required]\n\nOptions:\n  --start-runtime-server / --no-start-runtime-server\n                                  Whether to start the server for the running\n                                  application.  [default: no-start-runtime-server]\n  --runtime-server-host TEXT      The host to use for the flow server.\n                                  [default: 127.0.0.1]\n  --runtime-server-port INTEGER   The port to use for the flow server.\n                                  [default: 9653]\n  --run-id TEXT                   The run id to use for this run.\n  --app-dir TEXT                  The directory to look for the app in, by\n                                  adding this to `sys.path` we default to\n                                  looking in the directory.\n  --help                          Show this message and exit.\n")))}d.isMDXComponent=!0}}]);