"use strict";(self.webpackChunkbuildflow_docs=self.webpackChunkbuildflow_docs||[]).push([[5603],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(r),m=i,f=s["".concat(u,".").concat(m)]||s[m]||d[m]||o;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9915:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const o={},a="Portable",l={unversionedId:"user-guides/primitives/portable",id:"user-guides/primitives/portable",title:"Portable",description:"Portable primitives are special primitives that can be used across different cloud providers. You can for example say I want to use a Queue, and based on what cloud you are deploying to we will pick the appropriate resources to create.",source:"@site/docs/user-guides/primitives/portable.md",sourceDirName:"user-guides/primitives",slug:"/user-guides/primitives/portable",permalink:"/docs/user-guides/primitives/portable",draft:!1,editUrl:"https://github.com/launchflow/buildflow-docs/tree/main/docs/user-guides/primitives/portable.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Primitives",permalink:"/docs/user-guides/primitives/overview"},next:{title:"Custom Primitives",permalink:"/docs/user-guides/primitives/custom-primitives"}},u={},p=[{value:"Example",id:"example",level:2}],c={toc:p},s="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(s,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"portable"},"Portable"),(0,i.kt)("p",null,"Portable primitives are special primitives that can be used across different cloud providers. You can for example say I want to use a ",(0,i.kt)("inlineCode",{parentName:"p"},"Queue"),", and based on what cloud you are deploying to we will pick the appropriate resources to create."),(0,i.kt)("p",null,"For example a queue on AWS will use ",(0,i.kt)("inlineCode",{parentName:"p"},"SQS")," and a queue on GCP will use ",(0,i.kt)("inlineCode",{parentName:"p"},"GCP Pub/Sub"),"."),(0,i.kt)("p",null,"The queue is constructed using your cloud provider config found in ",(0,i.kt)("inlineCode",{parentName:"p"},".buildflow/cloud_provider_config.yaml"),"."),(0,i.kt)("p",null,"A full list of portable primitives can be found ",(0,i.kt)("a",{parentName:"p",href:"../../category/portable"},"here"),"."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"Python main file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from buildflow.io.portable import Queue\n\nsource = Queue(queue_id="my-queue")\n')),(0,i.kt)("p",null,"Cloud provider config:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"default_cloud_provider: gcp\naws:\n    default_region: null\nazure:\n    default_region: null\ngcp:\n    default_project_id: 'my-gcp-project'\n    default_region: null\n    default_zone: null\nlocal: {}\n")),(0,i.kt)("p",null,"When you run ",(0,i.kt)("inlineCode",{parentName:"p"},"buildflow apply main:app")," we will create a ",(0,i.kt)("inlineCode",{parentName:"p"},"GCP Pub/Sub")," queue with the id ",(0,i.kt)("inlineCode",{parentName:"p"},"my-queue")," in the project ",(0,i.kt)("inlineCode",{parentName:"p"},"my-gcp-project"),". You can easily switch your default cloud provider to have it create a ",(0,i.kt)("inlineCode",{parentName:"p"},"SQS")," queue on AWS instead by simply changing the ",(0,i.kt)("inlineCode",{parentName:"p"},"default_cloud_provider")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"aws"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Azure is not fully supported in BuildFlow yet.")))}d.isMDXComponent=!0}}]);